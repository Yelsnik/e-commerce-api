// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddSubtotalPrice(ctx context.Context, cart uuid.UUID) (float64, error)
	CreateCartitems(ctx context.Context, arg CreateCartitemsParams) (Cartitem, error)
	CreateCarts(ctx context.Context, arg CreateCartsParams) (Cart, error)
	CreateImages(ctx context.Context, arg CreateImagesParams) (Image, error)
	CreateProducts(ctx context.Context, arg CreateProductsParams) (Product, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteCartitems(ctx context.Context, id uuid.UUID) error
	DeleteProducts(ctx context.Context, id uuid.UUID) error
	GetALLCartitemsForUpdate(ctx context.Context) ([]Cartitem, error)
	GetAllCartitems(ctx context.Context) ([]Cartitem, error)
	GetCartitems(ctx context.Context, id uuid.UUID) (Cartitem, error)
	GetCartitemsByCartID(ctx context.Context, cart uuid.UUID) ([]Cartitem, error)
	GetCartitemsByProductID(ctx context.Context, product uuid.UUID) (Cartitem, error)
	GetCartitemsForUpdate(ctx context.Context, id uuid.UUID) (Cartitem, error)
	GetCarts(ctx context.Context, id uuid.UUID) (Cart, error)
	GetCartsByUserID(ctx context.Context, userID uuid.UUID) (Cart, error)
	GetCartsForUpdate(ctx context.Context, id uuid.UUID) (Cart, error)
	GetImages(ctx context.Context, product uuid.UUID) (Image, error)
	GetProducts(ctx context.Context, id uuid.UUID) (Product, error)
	GetUser(ctx context.Context, id uuid.UUID) (User, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	ListCartitems(ctx context.Context, arg ListCartitemsParams) ([]Cartitem, error)
	ListImages(ctx context.Context, arg ListImagesParams) ([]Image, error)
	ListProducts(ctx context.Context, arg ListProductsParams) ([]Product, error)
	UpdateCartitems(ctx context.Context, arg UpdateCartitemsParams) (Cartitem, error)
	UpdateCarts(ctx context.Context, arg UpdateCartsParams) (Cart, error)
	UpdateProducts(ctx context.Context, arg UpdateProductsParams) (Product, error)
}

var _ Querier = (*Queries)(nil)
